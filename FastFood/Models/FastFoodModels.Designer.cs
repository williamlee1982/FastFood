//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("FastFoodModels", "OrderSubOrder", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FastFood.Models.Order), "SubOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FastFood.Models.SubOrder), true)]
[assembly: EdmRelationshipAttribute("FastFoodModels", "OrderCustomer", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FastFood.Models.Order), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FastFood.Models.Customer))]
[assembly: EdmRelationshipAttribute("FastFoodModels", "OrderRecipe", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FastFood.Models.Order), "Recipe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FastFood.Models.SideDish))]
[assembly: EdmRelationshipAttribute("FastFoodModels", "CustomerSubOrderTemplate", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FastFood.Models.Customer), "SubOrderTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FastFood.Models.SubOrderTemplate), true)]
[assembly: EdmRelationshipAttribute("FastFoodModels", "OrderedDishDish", "OrderedDish", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FastFood.Models.OrderedDish), "Dish", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FastFood.Models.Dish))]
[assembly: EdmRelationshipAttribute("FastFoodModels", "SubOrderOrderedDish", "SubOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FastFood.Models.SubOrder), "OrderedDish", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FastFood.Models.OrderedDish), true)]

#endregion

namespace FastFood.Models
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class FastFoodModelsContainer : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“FastFoodModelsContainer”部分中的连接字符串初始化新 FastFoodModelsContainer 对象。
        /// </summary>
        public FastFoodModelsContainer() : base("name=FastFoodModelsContainer", "FastFoodModelsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 FastFoodModelsContainer 对象。
        /// </summary>
        public FastFoodModelsContainer(string connectionString) : base(connectionString, "FastFoodModelsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 FastFoodModelsContainer 对象。
        /// </summary>
        public FastFoodModelsContainer(EntityConnection connection) : base(connection, "FastFoodModelsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SubOrder> SubOrders
        {
            get
            {
                if ((_SubOrders == null))
                {
                    _SubOrders = base.CreateObjectSet<SubOrder>("SubOrders");
                }
                return _SubOrders;
            }
        }
        private ObjectSet<SubOrder> _SubOrders;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SideDish> SideDishes
        {
            get
            {
                if ((_SideDishes == null))
                {
                    _SideDishes = base.CreateObjectSet<SideDish>("SideDishes");
                }
                return _SideDishes;
            }
        }
        private ObjectSet<SideDish> _SideDishes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SubOrderTemplate> SubOrderTemplates
        {
            get
            {
                if ((_SubOrderTemplates == null))
                {
                    _SubOrderTemplates = base.CreateObjectSet<SubOrderTemplate>("SubOrderTemplates");
                }
                return _SubOrderTemplates;
            }
        }
        private ObjectSet<SubOrderTemplate> _SubOrderTemplates;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Dish> Dishes
        {
            get
            {
                if ((_Dishes == null))
                {
                    _Dishes = base.CreateObjectSet<Dish>("Dishes");
                }
                return _Dishes;
            }
        }
        private ObjectSet<Dish> _Dishes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<OrderedDish> OrderedDishes
        {
            get
            {
                if ((_OrderedDishes == null))
                {
                    _OrderedDishes = base.CreateObjectSet<OrderedDish>("OrderedDishes");
                }
                return _OrderedDishes;
            }
        }
        private ObjectSet<OrderedDish> _OrderedDishes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<DishUnit> DishUnits
        {
            get
            {
                if ((_DishUnits == null))
                {
                    _DishUnits = base.CreateObjectSet<DishUnit>("DishUnits");
                }
                return _DishUnits;
            }
        }
        private ObjectSet<DishUnit> _DishUnits;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Orders EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// 用于向 SubOrders EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSubOrders(SubOrder subOrder)
        {
            base.AddObject("SubOrders", subOrder);
        }
    
        /// <summary>
        /// 用于向 Customers EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// 用于向 SideDishes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSideDishes(SideDish sideDish)
        {
            base.AddObject("SideDishes", sideDish);
        }
    
        /// <summary>
        /// 用于向 SubOrderTemplates EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSubOrderTemplates(SubOrderTemplate subOrderTemplate)
        {
            base.AddObject("SubOrderTemplates", subOrderTemplate);
        }
    
        /// <summary>
        /// 用于向 Dishes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDishes(Dish dish)
        {
            base.AddObject("Dishes", dish);
        }
    
        /// <summary>
        /// 用于向 OrderedDishes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrderedDishes(OrderedDish orderedDish)
        {
            base.AddObject("OrderedDishes", orderedDish);
        }
    
        /// <summary>
        /// 用于向 DishUnits EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDishUnits(DishUnit dishUnit)
        {
            base.AddObject("DishUnits", dishUnit);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 客户
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FastFoodModels", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Customer 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static Customer CreateCustomer(global::System.Int32 id)
        {
            Customer customer = new Customer();
            customer.ID = id;
            return customer;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FastFoodModels", "OrderCustomer", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("FastFoodModels.OrderCustomer", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("FastFoodModels.OrderCustomer", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FastFoodModels", "CustomerSubOrderTemplate", "SubOrderTemplate")]
        public EntityCollection<SubOrderTemplate> SubOrderTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubOrderTemplate>("FastFoodModels.CustomerSubOrderTemplate", "SubOrderTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubOrderTemplate>("FastFoodModels.CustomerSubOrderTemplate", "SubOrderTemplate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 菜谱
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FastFoodModels", Name="Dish")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dish : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Dish 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static Dish CreateDish(global::System.Int32 id)
        {
            Dish dish = new Dish();
            dish.ID = id;
            return dish;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 每种菜式的不同计量单位
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FastFoodModels", Name="DishUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DishUnit : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 DishUnit 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="unit">Unit 属性的初始值。</param>
        public static DishUnit CreateDishUnit(global::System.Int32 id, global::System.String unit)
        {
            DishUnit dishUnit = new DishUnit();
            dishUnit.ID = id;
            dishUnit.Unit = unit;
            return dishUnit;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 订单
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FastFoodModels", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Order 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="orderDate">OrderDate 属性的初始值。</param>
        public static Order CreateOrder(global::System.Int32 id, global::System.DateTime orderDate)
        {
            Order order = new Order();
            order.ID = id;
            order.OrderDate = orderDate;
            return order;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FastFoodModels", "OrderSubOrder", "SubOrder")]
        public EntityCollection<SubOrder> SubOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubOrder>("FastFoodModels.OrderSubOrder", "SubOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubOrder>("FastFoodModels.OrderSubOrder", "SubOrder", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FastFoodModels", "OrderCustomer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FastFoodModels.OrderCustomer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FastFoodModels.OrderCustomer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FastFoodModels.OrderCustomer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("FastFoodModels.OrderCustomer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FastFoodModels", "OrderRecipe", "Recipe")]
        public SideDish SideDish
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SideDish>("FastFoodModels.OrderRecipe", "Recipe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SideDish>("FastFoodModels.OrderRecipe", "Recipe").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SideDish> SideDishReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SideDish>("FastFoodModels.OrderRecipe", "Recipe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SideDish>("FastFoodModels.OrderRecipe", "Recipe", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 分单中所定菜式及数量
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FastFoodModels", Name="OrderedDish")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderedDish : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 OrderedDish 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="subOrderID">SubOrderID 属性的初始值。</param>
        /// <param name="preOrderAmount">PreOrderAmount 属性的初始值。</param>
        /// <param name="actualOrderAmount">ActualOrderAmount 属性的初始值。</param>
        /// <param name="deliveryAmount">DeliveryAmount 属性的初始值。</param>
        /// <param name="deliveriedAmount">DeliveriedAmount 属性的初始值。</param>
        /// <param name="accountingDeliveriedAmount">AccountingDeliveriedAmount 属性的初始值。</param>
        public static OrderedDish CreateOrderedDish(global::System.Int32 id, global::System.Int32 subOrderID, global::System.Int32 preOrderAmount, global::System.Int32 actualOrderAmount, global::System.Int32 deliveryAmount, global::System.String deliveriedAmount, global::System.String accountingDeliveriedAmount)
        {
            OrderedDish orderedDish = new OrderedDish();
            orderedDish.ID = id;
            orderedDish.SubOrderID = subOrderID;
            orderedDish.PreOrderAmount = preOrderAmount;
            orderedDish.ActualOrderAmount = actualOrderAmount;
            orderedDish.DeliveryAmount = deliveryAmount;
            orderedDish.DeliveriedAmount = deliveriedAmount;
            orderedDish.AccountingDeliveriedAmount = accountingDeliveriedAmount;
            return orderedDish;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubOrderID
        {
            get
            {
                return _SubOrderID;
            }
            set
            {
                OnSubOrderIDChanging(value);
                ReportPropertyChanging("SubOrderID");
                _SubOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubOrderID");
                OnSubOrderIDChanged();
            }
        }
        private global::System.Int32 _SubOrderID;
        partial void OnSubOrderIDChanging(global::System.Int32 value);
        partial void OnSubOrderIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PreOrderAmount
        {
            get
            {
                return _PreOrderAmount;
            }
            set
            {
                OnPreOrderAmountChanging(value);
                ReportPropertyChanging("PreOrderAmount");
                _PreOrderAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreOrderAmount");
                OnPreOrderAmountChanged();
            }
        }
        private global::System.Int32 _PreOrderAmount;
        partial void OnPreOrderAmountChanging(global::System.Int32 value);
        partial void OnPreOrderAmountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualOrderAmount
        {
            get
            {
                return _ActualOrderAmount;
            }
            set
            {
                OnActualOrderAmountChanging(value);
                ReportPropertyChanging("ActualOrderAmount");
                _ActualOrderAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualOrderAmount");
                OnActualOrderAmountChanged();
            }
        }
        private global::System.Int32 _ActualOrderAmount;
        partial void OnActualOrderAmountChanging(global::System.Int32 value);
        partial void OnActualOrderAmountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeliveryAmount
        {
            get
            {
                return _DeliveryAmount;
            }
            set
            {
                OnDeliveryAmountChanging(value);
                ReportPropertyChanging("DeliveryAmount");
                _DeliveryAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliveryAmount");
                OnDeliveryAmountChanged();
            }
        }
        private global::System.Int32 _DeliveryAmount;
        partial void OnDeliveryAmountChanging(global::System.Int32 value);
        partial void OnDeliveryAmountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveriedAmount
        {
            get
            {
                return _DeliveriedAmount;
            }
            set
            {
                OnDeliveriedAmountChanging(value);
                ReportPropertyChanging("DeliveriedAmount");
                _DeliveriedAmount = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeliveriedAmount");
                OnDeliveriedAmountChanged();
            }
        }
        private global::System.String _DeliveriedAmount;
        partial void OnDeliveriedAmountChanging(global::System.String value);
        partial void OnDeliveriedAmountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountingDeliveriedAmount
        {
            get
            {
                return _AccountingDeliveriedAmount;
            }
            set
            {
                OnAccountingDeliveriedAmountChanging(value);
                ReportPropertyChanging("AccountingDeliveriedAmount");
                _AccountingDeliveriedAmount = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountingDeliveriedAmount");
                OnAccountingDeliveriedAmountChanged();
            }
        }
        private global::System.String _AccountingDeliveriedAmount;
        partial void OnAccountingDeliveriedAmountChanging(global::System.String value);
        partial void OnAccountingDeliveriedAmountChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FastFoodModels", "SubOrderOrderedDish", "SubOrder")]
        public SubOrder SubOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubOrder>("FastFoodModels.SubOrderOrderedDish", "SubOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubOrder>("FastFoodModels.SubOrderOrderedDish", "SubOrder").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubOrder> SubOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubOrder>("FastFoodModels.SubOrderOrderedDish", "SubOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubOrder>("FastFoodModels.SubOrderOrderedDish", "SubOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FastFoodModels", Name="SideDish")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SideDish : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SideDish 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static SideDish CreateSideDish(global::System.Int32 id)
        {
            SideDish sideDish = new SideDish();
            sideDish.ID = id;
            return sideDish;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 分单
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FastFoodModels", Name="SubOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubOrder : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SubOrder 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="orderID">OrderID 属性的初始值。</param>
        /// <param name="recipient">Recipient 属性的初始值。</param>
        /// <param name="recipientAddress">RecipientAddress 属性的初始值。</param>
        public static SubOrder CreateSubOrder(global::System.Int32 id, global::System.Int32 orderID, global::System.String recipient, global::System.String recipientAddress)
        {
            SubOrder subOrder = new SubOrder();
            subOrder.ID = id;
            subOrder.OrderID = orderID;
            subOrder.Recipient = recipient;
            subOrder.RecipientAddress = recipientAddress;
            return subOrder;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Recipient
        {
            get
            {
                return _Recipient;
            }
            set
            {
                OnRecipientChanging(value);
                ReportPropertyChanging("Recipient");
                _Recipient = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Recipient");
                OnRecipientChanged();
            }
        }
        private global::System.String _Recipient;
        partial void OnRecipientChanging(global::System.String value);
        partial void OnRecipientChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RecipientAddress
        {
            get
            {
                return _RecipientAddress;
            }
            set
            {
                OnRecipientAddressChanging(value);
                ReportPropertyChanging("RecipientAddress");
                _RecipientAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RecipientAddress");
                OnRecipientAddressChanged();
            }
        }
        private global::System.String _RecipientAddress;
        partial void OnRecipientAddressChanging(global::System.String value);
        partial void OnRecipientAddressChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FastFoodModels", "OrderSubOrder", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("FastFoodModels.OrderSubOrder", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("FastFoodModels.OrderSubOrder", "Order").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("FastFoodModels.OrderSubOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("FastFoodModels.OrderSubOrder", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FastFoodModels", "SubOrderOrderedDish", "OrderedDish")]
        public EntityCollection<OrderedDish> OrderedDishes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderedDish>("FastFoodModels.SubOrderOrderedDish", "OrderedDish");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderedDish>("FastFoodModels.SubOrderOrderedDish", "OrderedDish", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 客户预定义分单模板
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FastFoodModels", Name="SubOrderTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubOrderTemplate : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SubOrderTemplate 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="customerID">CustomerID 属性的初始值。</param>
        /// <param name="recipient">Recipient 属性的初始值。</param>
        /// <param name="recipientAddress">RecipientAddress 属性的初始值。</param>
        /// <param name="code">Code 属性的初始值。</param>
        public static SubOrderTemplate CreateSubOrderTemplate(global::System.Int32 id, global::System.Int32 customerID, global::System.String recipient, global::System.String recipientAddress, global::System.String code)
        {
            SubOrderTemplate subOrderTemplate = new SubOrderTemplate();
            subOrderTemplate.ID = id;
            subOrderTemplate.CustomerID = customerID;
            subOrderTemplate.Recipient = recipient;
            subOrderTemplate.RecipientAddress = recipientAddress;
            subOrderTemplate.Code = code;
            return subOrderTemplate;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Recipient
        {
            get
            {
                return _Recipient;
            }
            set
            {
                OnRecipientChanging(value);
                ReportPropertyChanging("Recipient");
                _Recipient = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Recipient");
                OnRecipientChanged();
            }
        }
        private global::System.String _Recipient;
        partial void OnRecipientChanging(global::System.String value);
        partial void OnRecipientChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RecipientAddress
        {
            get
            {
                return _RecipientAddress;
            }
            set
            {
                OnRecipientAddressChanging(value);
                ReportPropertyChanging("RecipientAddress");
                _RecipientAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RecipientAddress");
                OnRecipientAddressChanged();
            }
        }
        private global::System.String _RecipientAddress;
        partial void OnRecipientAddressChanging(global::System.String value);
        partial void OnRecipientAddressChanged();
    
        /// <summary>
        /// 预定义分单代码(A~Z)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FastFoodModels", "CustomerSubOrderTemplate", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FastFoodModels.CustomerSubOrderTemplate", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FastFoodModels.CustomerSubOrderTemplate", "Customer").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FastFoodModels.CustomerSubOrderTemplate", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("FastFoodModels.CustomerSubOrderTemplate", "Customer", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
